#include<bits/stdc++.h>
#include <stdio.h>
using namespace std;
#define N 5
int a[N];
int rear=-1,front=-1;
void enqueue();
void display();
void dequeue();
void peek();


void enqueue()
{
    int x;
    if(rear==N-1){
        cout<<"Overloaded"<<endl;
    }
    else if(rear==-1 and front==-1){
        cout<<"Enter data"<<endl;
        cin>>x;
        rear++;
        front++;
        a[rear]=x;
    }
    else{
        cout<<"Enter data"<<endl;
        cin>>x;
        rear++;
        a[rear]=x;
    }
}

void dequeue()
{
    if(rear==-1 and front==-1){
        cout<<"Queue is empty"<<endl;
    }
    else if(rear==front){
        rear=front=-1;
    }
    else{
        front++;
    }
}

void peek()
{
    cout<<"front element is:- "<<a[front]<<endl;
}

void display()
{
    if(front==-1 and rear==-1){
        cout<<"Queue is empty"<<endl;
    }
    else{
        cout<<"Current Queue is:- ";
        for(int i=front;i<=rear;i++){
            cout<<a[i]<<" ";
        }
    }
    cout<<endl;
}


int main()
{
    int i=1;
    while(i){
        int j;
        cout<<"enter your choice:-"<<endl;
        cout<<"Press 1 for enqueue"<<endl<<"Press 2 for dequeue"<<endl<<"Press 3 for peek"<<endl<<"Press 4 for display"<<endl;
        cout<<"Press 0 for exit"<<endl;
        cin>>j;
        
        switch(j)
        {
            case 0: exit(0);
            break;
            case 1: enqueue();
            break;
            case 2: dequeue();
            break;
            case 3: peek();
            break;
            case 4: display();
            break;
            default: cout<<"wrong Choice"<<endl;
        }
    }
    
    
}
