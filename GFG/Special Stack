stack<int>st;
void push(stack<int>& s, int a){
	// Your code goes here
	if(st.empty() or st.top()>=a)
	st.push(a);
	
	s.push(a);
	
}

bool isFull(stack<int>& s,int n){
	// Your code goes here
	if(s.size()==n)
	return true;
	else
	return false;
	
}

bool isEmpty(stack<int>& s){
	// Your code goes here
	if(s.empty())
	return true;
	else
	return false;
}

int pop(stack<int>& s){
	// Your code goes here
	if(!s.empty()){
        int a=s.top();
        s.pop();
        if(a==st.top())
        {
            st.pop();
        }
        return a;
    }
    return -1;
}

int getMin(stack<int>& s){
	// Your code goes here
	if(s.empty())
    return -1;
    else
    return st.top();
}
