//This code will give TLE 
//Test Cases Passed: 54 /165
class Solution
{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(vector<int>arr, int n, long long s)
    {
        // Your code here
        vector<int>ans;
        for(long long int i=0;i<n;i++)
        {
            long long int sum=0;
            for(long long int j=i;j<n;j++)
            {
                if(sum==s)
                {
                    ans.push_back(i+1);
                    ans.push_back(j);
                    return ans;
                }
                sum=sum+arr[j];
            }
            if(sum==s)
            {
                ans.push_back(i+1);
                ans.push_back(n);
                return ans;
            }
            
        }
        ans.push_back(-1);
        return ans;
    }
};

//Fully functioning code...


class Solution
{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(vector<int>arr, int n, long long s)
    {
        // Your code here
        vector<int>ans;
        long long sum=0;
        int right=0,left=0;
        if(s==0)
        return {-1};//ans.push_back(-1) both are same
        
        while(left<=right)
        {
            if(sum<s)
            {
               sum=sum+arr[right];
               right++;
            }
            else if(sum>s)
            {
               sum=sum-arr[left];
               left++;
            }
            else
            {
               ans.push_back(left+1);
               ans.push_back(right);
               return ans;
            }
            if(right>n)
            return {-1};
        }
        ans.push_back(-1);
        return ans;
    }
};

