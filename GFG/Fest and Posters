Geek's School is going to conduct a fest soon, for this fest's advertisement school needs some number of posters represented by NUM. Geek's class is
appointed to make all the posters for the fest, class has N students each student can make one poster in some amount of time, which is represented by an
integer array time of length N. Every student will start making the second poster as soon as he/she gets finished with the first one and so on. You need
to find the minimum amount of time so that all the students together have made at least NUM number of posters.

class Solution {
public:
    long long minimumTime(int N, int NUM, vector<int> &time) {
        // Calculate the total number of posters that can be made in the minimum time
        long long left = 0, right = (long long)1e18, ans = 0;
        while (left <= right) {
            long long mid = (left + right) / 2;
            long long cnt = 0;
            for (int i = 0; i < N; i++) {
                cnt += mid / time[i];
            }
            if (cnt >= NUM) {
                ans = mid;
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return ans;
    }
};
