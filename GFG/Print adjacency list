class Solution {
  public:
    // Function to return the adjacency list for each vertex.
    vector<vector<int>> printGraph(int v, vector<int> graph[]) 
    {
        // Code here
        vector<vector<int>> ans;
        int i;
        
        for(i=0;i<v;i++)
        {
            vector<int>temp;
            temp.push_back(i);
            for(auto itr=graph[i].begin();itr!=graph[i].end();itr++)
            {
                temp.push_back(*itr);
                
            }
            ans.push_back(temp);
        }
        return ans;
    }
};


//Added new approach
class Solution {
  public:
    // Function to return the adjacency list for each vertex.
    vector<vector<int>> printGraph(int V, vector<pair<int,int>>edges)
    {
        // Code here
         vector<vector<int>> ans(V);
        for(auto i:edges)
        {
            int u = i.first;
            int v = i.second;
            ans[u].push_back(v);
            ans[v].push_back(u);
        }
        return ans;
    }
};
