Given an array A of N integers, for each i your task is to find min(A[01,A[1],â€¦A[i-11)-
min(A[i+11,A[i+2],-,A[n-1]). If there are no element at the left or right of i then consider minimum element towards that part to be zero.

class Solution {
public:
    vector<int> findDifferenceArray(int N, vector<int> &A) {
        vector<int> left_min(N), right_min(N);
        left_min[0] = A[0];
        right_min[N-1] = A[N-1];
        for (int i = 1; i < N; i++) {
            left_min[i] = min(left_min[i-1], A[i]);
        }
        for (int i = N-2; i >= 0; i--) {
            right_min[i] = min(right_min[i+1], A[i]);
        }
        vector<int> result(N);
        for (int i = 0; i < N; i++) {
            int left = (i == 0) ? 0 : left_min[i-1];
            int right = (i == N-1) ? 0 : right_min[i+1];
            result[i] = left - right;
        }
        return result;
    }

};
