class Solution{
    public:
    // n: input to count the number of set bits
    //Function to return sum of count of set bits in the integers from 1 to n.
    int countSetBits(int n)
    {
        // Your logic here
        int i,sum=0;
        for(i=1;i<=n;i++)
        {
            int cnt=__builtin_popcount(i);
            sum+=cnt;
        }
        return sum;
    }
};

//OR


class Solution{
    public:
    // n: input to count the number of set bits
    //Function to return sum of count of set bits in the integers from 1 to n.
    int countSetBits(int n)
    {
        // Your logic here
        if(n==0)
        return 0;
        
        int p=0,ans;
        while((pow(2,p))<=n)
        p++;
        p--;
        ans=p*pow(2,p)/2+ (n-pow(2,p)+1)+ countSetBits(n-pow(2,p));
        return ans;
    }
};
