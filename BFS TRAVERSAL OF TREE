//#include<bits/stdc++.h>
#include<iostream>
#include<queue>
#include <stdio.h>
using namespace std;

struct node
{
    int data;
    struct node *left, *right;
};

struct node *create()
{
    int x;
    struct node *newnode;
    newnode =(struct node*)malloc(sizeof(struct node));
    cout<<"Enter data ('-1'for no node)"<<endl;
    cin>>x;
    if(x==-1){
            return 0;
    }
    newnode->data=x;
    cout<<"Enter left child of "<<x<<endl;
    newnode->left=create();
    cout<<"Enter right child of "<<x<<endl;
    newnode->right=create();
    return newnode;
}

void preorder( struct node* root)
{
    if(root==0){
        return;
    }
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}


void inorder( struct node* root)//left root right
{
    if(root==0){
        return;
    }
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}

void postorder( struct node* root)//left right root
{
    if(root==0){
        return;
    }
    postorder(root->left);
    postorder(root->right);
    cout<<root->data<<" ";
}

void bfs( struct node* root)
{
    queue<struct node*>que;
    struct node *q;
    que.push(root);

	while(!que.empty())
	{
		q=que.front();
        que.pop();
        cout<<q->data<<" ";
		if(q->left!=NULL)
			que.push(q->left);
		if(q->right!=NULL)
			que.push(q->right);		
	
	}
    return;
}

int main()
{
    struct node *root;
    root=0;
    root=create();
    cout<<endl;
    
    cout<<"preorder:-";
    preorder(root);
    cout<<endl;
    cout<<"inorder:-";
    inorder(root);
    cout<<endl;
    cout<<"postorder:-";
    postorder(root);
    cout<<endl;
    cout<<"bfs:-";
    bfs(root);


}
/*
1
2
4
-1
-1
5
-1
-1
3
6
-1
-1
7
-1
-1
*/
